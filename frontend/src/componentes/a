import React from "react";
import '../App.css';


const Square = ({ value, onClick }) => (
  <button className={`square squares`} onClick={onClick}>
    {value}
  </button>
);

  
  // Board Component
  const Board = ({ squares, onClick }) => {
    const renderSquare = (i) => (
      <Square value={squares[i]} onClick={() => onClick(i)} />
    );
  
    return (
      <div className="board">
        <div className="board-row">
          {renderSquare(0)}
          {renderSquare(1)}
          {renderSquare(2)}
        </div>
        <div className="board-row">
          {renderSquare(3)}
          {renderSquare(4)}
          {renderSquare(5)}
        </div>
        <div className="board-row">
          {renderSquare(6)}
          {renderSquare(7)}
          {renderSquare(8)}
        </div>
      </div>
    );
  };
  
  // Game Component
  class Game extends React.Component {
    constructor(props) {
      super(props);
      this.state = {
        history: [
          {
            squares: Array(9).fill(null),
          },
        ],
        stepNumber: 0,
        xIsNext: true,
      };
    }
  
    handleClick(i) {
      const { history, stepNumber, xIsNext } = this.state;
      const current = history[stepNumber];
      const squares = current.squares.slice();
  
      if (calculateWinner(squares) || squares[i]) {
        return;
      }
  
      squares[i] = xIsNext ? 'X' : 'O';
  
      this.setState({
        history: history.slice(0, stepNumber + 1).concat([
          {
            squares: squares,
          },
        ]),
        stepNumber: history.length,
        xIsNext: !xIsNext,
      });
    }
  
    jumpTo(step) {
      this.setState({
        stepNumber: step,
        xIsNext: step % 2 === 0,
      });
    }
  
    render() {
      const { history, stepNumber, xIsNext } = this.state;
      const current = history[stepNumber];
      // const winner = calculateWinner(current.squares);
  
      // const moves = history.map((step, move) => {
      //   const desc = move ? `Go to move #${move}` : 'Go to game start';
      //   return (
      //     <li key={move}>
      //       <button onClick={() => this.jumpTo(move)}>{desc}</button>
      //     </li>
      //   );
      // });
  
      // let status;
      // if (winner) {
      //   status = `Winner: ${winner}`;
      // } else {
      //   status = `Next player: ${xIsNext ? 'X' : 'O'}`;
      // }
  
      return (
        <div className="game">

          <div className="game-board">
            <Board squares={current.squares} onClick={(i) => this.handleClick(i)} />
          </div>

          <div className="game-info">
            {/* <div>{status}</div> */}
            {/* <ol>{moves}</ol> */}
          </div>
        </div>
      );
    }
  }
  
  // Helper function to calculate the winner
  const calculateWinner = (squares) => {
    const lines = [
      [0, 1, 2],
      [3, 4, 5],
      [6, 7, 8],
      [0, 3, 6],
      [1, 4, 7],
      [2, 5, 8],
      [0, 4, 8],
      [2, 4, 6],
    ];
    for (let i = 0; i < lines.length; i++) {
      const [a, b, c] = lines[i];
      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {
        return squares[a];
      }
    }
    return null;
  };
  
  export default Game;
